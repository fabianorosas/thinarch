#!/bin/bash

root=/srv/arch
dhcp=yes

make_client_image() {
    truncate -s 2G /srv/arch.img
    mkfs.btrfs /srv/arch.img >/dev/null
    mkdir -p "$root"
    mount -o loop,discard,compress=lzo /srv/arch.img "$root"

    pacstrap -c -d "$root" base mkinitcpio-nfs-utils nfs-utils >/dev/null
    pacman --noconfirm --root "$root" --dbpath "$root/var/lib/pacman" -S grub >/dev/null
    pacman --noconfirm --root "$root" --dbpath "$root/var/lib/pacman" -S xorg-server xorg-server-utils xorg-xinit >/dev/nul
}

configure_client_image(){
    sed 's/nfsmount/mount.nfs4/' "$root/usr/lib/initcpio/hooks/net" > "$root/usr/lib/initcpio/hooks/net_nfs4"
    cp $root/usr/lib/initcpio/install/net{,_nfs4}

    cp "/usr/share/thinarch/client/ta-mkinitcpio.conf" "$root/etc/ta-mkinitcpio.conf"
    arch-chroot "$root" /usr/bin/mkinitcpio -k /boot/vmlinuz-linux -c /etc/ta-mkinitcpio.conf -g /boot/initramfs-linux.img 

    arch-chroot "$root" grub-mknetdir --net-directory=/boot --subdir=grub >/dev/null
    cp /usr/share/thinarch/client/grub.cfg "$root/boot/grub/grub.cfg"

    echo "thinarch" > "$root/etc/hostname"
    cp /usr/share/thinarch/client/host "$root/etc/hosts"
}

post_install_advice() {
    cat <<EOF
###############################################################################

>>>> Add the extra modules needed by the client machine to
$root/etc/ta-mkinitcpio.conf and run:

    arch-chroot "$root" mkinitcpio -k /boot/vmlinuz-linux
        -c /etc/ta-mkinitcpio.conf -g /boot/initramfs-linux.img

>>>> Install the rest of the packages like desktop environments, text editors
 and such:

    pacman --root "$root" --dbpath "$root/var/lib/pacman" -S <pkgs>

>>>> Set up the clients' locale, timezone, keymap and follow any other relevant
parts of the Installation Guide.

>>>> Set your (server) IP address to the one specified in /etc/dhcp.conf
 [default 10.0.0.1/24]

>>>> Start the system with thinarch -s

###############################################################################
EOF
}

mount_client_image(){
    mkdir -p "$root"
    mount -o loop,discard,compress=lzo /srv/arch.img "$root"
}

umount_client_image(){
    umount /srv/arch
}

#    services=("dhcpd4.service" "tftpd.socket" "tftpd.service" "nfs-server.service")
#
#    for s in ${services[@]}
#    do
#	if [ "$2" = "-f" ]
#	then
#	    systemctl $1 $s
#	else
#	    systemctl $1 $s | head -3
#	fi
#	
#	if [ "$1" = "status" ]
#	then
#	    echo ""
#	fi
#    done

#-------------------------------------------------------------------------------
usage() {
    cat <<EOF
Usage:
$0 <[options]>

    Options:
            -d   --nodhcp         Do not run a DHCP server
            -i   --install        Install client
            -m   --mount          Mount client image
            -u   --unmount        Unmount client image
                 --start          Start the server
                 --stop           Stop the server
            -s   --status         Show the status of all the services
EOF
}

[ $# = 0 ] && usage

while getopts ':ih-A:' OPTION ; do
    case "$OPTION" in
	d)
	    dhcp=no;;
	h)
	    usage;;   
	i)
#	    make_client_image;
#	    configure_client_image;
	    post_install_advice;;
	-)
	    [ $OPTIND -ge 1 ] && optind=$(expr $OPTIND - 1 ) || optind=$OPTIND
            eval OPTION="\$$optind"
            OPTARG=$(echo $OPTION | cut -d'=' -f2)
            OPTION=$(echo $OPTION | cut -d'=' -f1)
            case $OPTION in
		--foo )
		    lfoo=yes;;
		--help )
		    usage;;
		--arguments )
		    larguments=yes;
		    lARG="$OPTARG";; 
		* )
		    usage;;
            esac
	    OPTIND=1
	    shift;;
	?)
	    usage;;
    esac
done

