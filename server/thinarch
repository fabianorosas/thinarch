#!/bin/bash

root=/srv/arch
dhcp=yes
install=no
start=no
exec 4>&2 3>&1

configure_server(){
  install --backup=numbered -Dm644 /etc/{thinarch/server/dhcp/,}dhcpd.conf
  install --backup=numbered -Dm644 /etc/{thinarch/server/tftp/,}tftpd.service
  install --backup=numbered -Dm644 /etc/{thinarch/server/nfs/,}exports
}

make_client_image() {
    truncate -s 2G /srv/arch.img
    mkfs.btrfs /srv/arch.img >&3 2>&4
    mkdir -p "$root"
    mount -o loop,discard,compress=lzo /srv/arch.img "$root"

    pacstrap -c -d "$root" base mkinitcpio-nfs-utils nfs-utils >&3 2>&4
    pacman --noconfirm --root "$root" --dbpath "$root/var/lib/pacman" -S grub >&3 2>&4
    pacman --noconfirm --root "$root" --dbpath "$root/var/lib/pacman" -S xorg-server xorg-server-utils xorg-xinit >&3 2>&4

    configure_client_image;
}

configure_client_image(){
    sed 's/nfsmount/mount.nfs4/' "$root/usr/lib/initcpio/hooks/net" > "$root/usr/lib/initcpio/hooks/net_nfs4"
    cp $root/usr/lib/initcpio/install/net{,_nfs4}

    cp "/etc/thinarch/client/ta-mkinitcpio.conf" "$root/etc/ta-mkinitcpio.conf"
    arch-chroot "$root" /usr/bin/mkinitcpio -k /boot/vmlinuz-linux -c /etc/ta-mkinitcpio.conf -g /boot/initramfs-linux.img 

    arch-chroot "$root" grub-mknetdir --net-directory=/boot --subdir=grub >&3 2>&4
    cp /usr/share/thinarch/client/grub.cfg "$root/boot/grub/grub.cfg"

    echo "thinarch" > "$root/etc/hostname"
    cp "/etc/thinarch/client/host" "$root/etc/hosts"

    post_install_advice;
}

post_install_advice() {
    cat <<EOF
###############################################################################

>>>> Add the extra modules needed by the client machine to
$root/etc/ta-mkinitcpio.conf and run:

    arch-chroot "$root" mkinitcpio -k /boot/vmlinuz-linux
        -c /etc/ta-mkinitcpio.conf -g /boot/initramfs-linux.img

>>>> Install the rest of the packages like desktop environments, text editors
 and such:

    pacman --root "$root" --dbpath "$root/var/lib/pacman" -S <pkgs>

>>>> Set up the clients' locale, timezone, keymap and follow any other relevant
parts of the Installation Guide.

>>>> Set your (server) IP address to the one specified in /etc/dhcp.conf
 [default 10.0.0.1/24]

>>>> Start the system with thinarch --start

###############################################################################
EOF
}

mount_client_image(){
    mkdir -p "$root"
    mount -o loop,discard,compress=lzo /srv/arch.img "$root"
}

umount_client_image(){
    umount /srv/arch
}

start(){
    mount_client_image;
    [ $dhcp = yes ] && systemctl start dhcpd4.service
    systemctl start tftpd.socket tftpd.service nfs-server.service
}

status(){
    systemctl status dhcpd4.service tftpd.socket tftpd.service nfs-server.service
}

stop(){
    systemctl stop dhcpd4.service tftpd.socket tftpd.service nfs-server.service
    umount_client_image;
}

#-------------------------------------------------------------------------------
usage() {
    cat <<EOF
Usage:
$0 <[options]>

    Options:
            -d   --nodhcp         Do not run a DHCP server
            -i   --install        Install client
                 --start          Start the server
                 --stop           Stop the server
            -r   --root           The path where the chroot will be created
            -s   --status         Show the status of all the services
            -v   --verbose        Show lots of output
EOF
}

[ $# = 0 ] && usage

while getopts ':dsihv-A:' OPTION ; do
    case "$OPTION" in
	d)
	    dhcp=no;;
	h)
	    usage;
	    exit 0;;
	i)
	    install=yes;;
	r)
	    root="$OPTARG";;
	s)
	    status;
	    exit 0;;
	v)
	    exec 4>/dev/null 3>/dev/null;;
	-)
	    [ $OPTIND -ge 1 ] && optind=$(expr $OPTIND - 1 ) || optind=$OPTIND
            eval OPTION="\$$optind"
            OPTARG=$(echo $OPTION | cut -d'=' -f2)
            OPTION=$(echo $OPTION | cut -d'=' -f1)
            case $OPTION in
		--install)
		    install=yes;;
		--start)
		    start=yes;
		    exit 0;;
		--stop)
		    stop;
		    exit 0;;
		--status)
		    status;
		    exit 0;;
		--nodhcp)
		    dhcp=no;;
		--help)
		    usage;
		    exit 0;;
		--root)
		    root="$OPTARG";;
		--verbose)
		    exec 4>/dev/null 3>/dev/null;;
		*)
		    usage;
		    exit 0;;
            esac
	    OPTIND=1
	    shift;;
	?)
	    usage;;
    esac
done

[ $install = yes ] && make_client_image && exit0
[ $start = yes ] && start && exit0
